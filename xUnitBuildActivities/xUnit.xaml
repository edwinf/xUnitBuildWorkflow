<Activity mc:Ignorable="sap sads" x:Class="CustomBuildActivities.xUnitRunner" local:xUnitRunner.TestDLLSpec="**\*tests*" local:xUnitRunner.ResultsFile="results.xml" local:xUnitRunner.UseXMLOutputFormat="True"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common"
 xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:mtbc1="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client"
 xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:s1="clr-namespace:System;assembly=mscorlib"
 xmlns:s2="clr-namespace:System;assembly=System"
 xmlns:s3="clr-namespace:System;assembly=System.Xml"
 xmlns:s4="clr-namespace:System;assembly=System.Core"
 xmlns:s5="clr-namespace:System;assembly=System.ServiceModel"
 xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities"
 xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System"
 xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel"
 xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core"
 xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:scg4="clr-namespace:System.Collections.Generic;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sd1="clr-namespace:System.Data;assembly=System.Data.DataSetExtensions"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:si1="clr-namespace:System.IO;assembly=System.Core"
 xmlns:si2="clr-namespace:System.IO;assembly=System"
 xmlns:si3="clr-namespace:System.IO;assembly=System.ServiceModel"
 xmlns:si4="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:sl="clr-namespace:System.Linq;assembly=System.Core"
 xmlns:sl1="clr-namespace:System.Linq;assembly=System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sr="clr-namespace:System.Reflection;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:st="clr-namespace:System.Text;assembly=mscorlib"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 xmlns:local="clr-namespace:CustomBuildActivities">
  <x:Members>
    <x:Property Name="TestDLLSpec" Type="InArgument(x:String)" />
    <x:Property Name="PathToxUnit" Type="InArgument(x:String)" />
    <x:Property Name="ResultsFile" Type="InArgument(x:String)" />
    <x:Property Name="WorkingDirectory" Type="InArgument(x:String)" />
    <x:Property Name="UseXMLOutputFormat" Type="InArgument(x:Boolean)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>596,1027</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Sequence DisplayName="Run xUnit" sad:XamlDebuggerXmlReader.FileName="E:\Users\Edwin\Programs\Git\xUnitBuildTask\xUnitBuildActivities\xUnit.xaml" sap:VirtualizedContainerService.HintSize="556,963" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc1:IBuildDetail" Name="BuildDetail" />
      <Variable x:TypeArguments="scg3:IEnumerable(x:String)" Name="MatchingFiles" />
      <Variable x:TypeArguments="x:String" Name="FileSpecToMatch" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg3:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg3:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Validate Arguments" sap:VirtualizedContainerService.HintSize="534,51">
      <sap:WorkflowViewStateService.ViewState>
        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg3:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[String.IsNullOrWhiteSpace(PathToxUnit) Or (Not File.Exists(PathToxUnit))]" DisplayName="Validate PathToxUnit" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Throw DisplayName="Throw ArgumentException" Exception="[New ArgumentException(&quot;Please specify a valid sources directory to search for matching files&quot;, &quot;SourcesDirectory&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" />
        </If.Then>
      </If>
      <If Condition="[String.IsNullOrWhiteSpace(TestDLLSpec)]" DisplayName="Validate FileSpec" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Throw DisplayName="Throw ArgumentException" Exception="[New ArgumentException(&quot;Please specify the file specification to search for&quot;, &quot;FileSpec&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" />
        </If.Then>
      </If>
      <If Condition="[String.IsNullOrWhiteSpace(ResultsFile)]" DisplayName="Validate ResultsFile" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Throw DisplayName="Throw ArgumentException" Exception="[New ArgumentException(&quot;Please specify the regular expression to search for&quot;, &quot;RegularExpression&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" />
        </If.Then>
      </If>
      <If Condition="[String.IsNullOrWhiteSpace(WorkingDirectory)]" DisplayName="Validate WorkingDirectory" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Throw DisplayName="Throw ArgumentException" Exception="[New ArgumentException(&quot;Please specify the regular expression to search for&quot;, &quot;RegularExpression&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" />
        </If.Then>
      </If>
    </Sequence>
    <Assign DisplayName="Form Qualified FileSpec" sap:VirtualizedContainerService.HintSize="534,60">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FileSpecToMatch]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Format("{0}\{1}", WorkingDirectory, TestDLLSpec)]</InArgument>
      </Assign.Value>
    </Assign>
    <mtbwa:FindMatchingFiles DisplayName="Find Matching Files" sap:VirtualizedContainerService.HintSize="534,22" MatchPattern="[FileSpecToMatch]" Result="[MatchingFiles]" />
    <If Condition="[MatchingFiles.Any()]" DisplayName="Handle Matching Files" sap:VirtualizedContainerService.HintSize="534,586">
      <sap:WorkflowViewStateService.ViewState>
        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg3:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Process Matching Files" sap:VirtualizedContainerService.HintSize="309,478">
          <sap:WorkflowViewStateService.ViewState>
            <scg3:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg3:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <mtbwa:WriteBuildMessage DisplayName="Log Test Run Starting" sap:VirtualizedContainerService.HintSize="287,22" Importance="[BuildMessageImportance.High]" Message="Begining xUnit run" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
          <ForEach x:TypeArguments="x:String" DisplayName="Enumerate Matching Files" sap:VirtualizedContainerService.HintSize="287,292" Values="[MatchingFiles]">
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="path" />
              </ActivityAction.Argument>
              <mtbwa:InvokeProcess Arguments="[String.Format(&quot;{0} /silent {1} {2}&quot;, path, If(UseXMLOutputFormat = True, &quot;/xml&quot;, &quot;&quot;), If(UseXMLOutputFormat = True, ResultsFile, &quot;&quot;))]" DisplayName="xUnit Runner" FileName="[PathToxUnit]" sap:VirtualizedContainerService.HintSize="200,184" WorkingDirectory="[WorkingDirectory]">
                <mtbwa:InvokeProcess.ErrorDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.ErrorDataReceived>
                <mtbwa:InvokeProcess.OutputDataReceived>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </mtbwa:InvokeProcess.OutputDataReceived>
              </mtbwa:InvokeProcess>
            </ActivityAction>
          </ForEach>
        </Sequence>
      </If.Then>
      <If.Else>
        <mtbwa:WriteBuildWarning DisplayName="Warn No Matches Found" sap:VirtualizedContainerService.HintSize="200,22" Message="[String.Format(&quot;No version information files found matching {0}&quot;, FileSpecToMatch)]" />
      </If.Else>
    </If>
  </Sequence>
</Activity>